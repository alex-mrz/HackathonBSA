export declare const RequestFormat: import("@mysten/bcs").BcsType<{
    ptb: number[];
    enc_key: number[];
    enc_verification_key: number[];
}, {
    ptb: Iterable<number> & {
        length: number;
    };
    enc_key: Iterable<number> & {
        length: number;
    };
    enc_verification_key: Iterable<number> & {
        length: number;
    };
}>;
export type Certificate = {
    session_vk: string;
    creation_time: number;
    ttl_min: number;
    signature: string;
};
export declare class SessionKey {
    private packageId;
    private creationTime;
    private ttlMin;
    private session_key;
    private personalMessageSignature;
    constructor(packageId: Uint8Array, ttlMin: number);
    getPersonalMessage(): Uint8Array;
    setPersonalMessageSignature(personalMessageSignature: string): void;
    getCertificate(): Certificate;
    createRequestParams(txBytes: Uint8Array): Promise<{
        decryption_key: Uint8Array;
        request_signature: string;
    }>;
}
